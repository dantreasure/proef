(function(window, document, undefined) {
'use strict';
var proef = angular.module('proef', ['ui.router']);

proef.config(["$stateProvider", "$urlRouterProvider", function($stateProvider, $urlRouterProvider) {
  $urlRouterProvider.otherwise("/");

  $stateProvider
    .state('home', {
      url: "/",
      templateUrl: "../partials/home.html",
      controller: "homeCtrl"
    })
    .state('approach', {
      url: "/approach",
      templateUrl: "../partials/approach.html",
      controller: "approachCtrl"
    })
    .state('about', {
      url: "/about",
      templateUrl: "../partials/about.html",
      controller: "aboutCtrl"
    })
    .state('contact', {
      url: "/contact",
      templateUrl: "../partials/contact.html",
      controller: "contactCtrl"
    })
}]);

proef.controller('aboutCtrl', ['$scope', function($scope) {
	$scope.message = 'this is the about page';
}]);

proef.controller('approachCtrl', ['$scope', function($scope) {
	$scope.message = 'this is the approach page';
}]);

proef.controller('contactCtrl', ['$scope', function($scope) {
  $scope.message = 'this is the contact page';
}]);

proef.controller('homeCtrl', ['$scope', function($scope) {
  $scope.message = 'this is the home page';

  // $scope.currentBackground = 1;

  // $scope.previousQuote = function(){
  // 	if ($scope.currentBackground !== 1){
  // 		$scope.currentBackground--;
  // 	}
  // };

  // $scope.nextQuote = function(){
  // 	if ($scope.currentBackground !== 5){
  // 		$scope.currentBackground++;
  // 	}
  // };

}]);

proef.controller('indexCtrl', ['$scope', function($scope) {
  $scope.mouseDirection = 'left';

  $scope.updateMouse = function(evt){
    var x = evt.x;
    var halfScreen = document.body.clientWidth/ 2;
    if (x < halfScreen){
      $scope.mouseDirection = 'left'
    } else{
      $scope.mouseDirection = 'right'
    }
  };

  $scope.currentBackground = 1;

  $scope.previousQuote = function(){
  	if ($scope.currentBackground !== 1){
  		$scope.currentBackground--;
  	}
  };

  $scope.nextQuote = function(){
  	if ($scope.currentBackground !== 5){
  		$scope.currentBackground++;
  	}
  };

}]);

})(window, document);

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyIsImFib3V0LWN0cmwuanMiLCJhcHByb2FjaC1jdHJsLmpzIiwiY29udGFjdC1jdHJsLmpzIiwiaG9tZS1jdHJsLmpzIiwiaW5kZXgtY3RybC5qcyIsIm1haW4uanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsQ0FBQSxTQUFBLFFBQUEsVUFBQSxXQUFBO0FBQ0E7QUFDQSxJQUFBLFFBQUEsUUFBQSxPQUFBLFNBQUEsQ0FBQTs7QUFFQSxNQUFBLGdEQUFBLFNBQUEsZ0JBQUEsb0JBQUE7RUFDQSxtQkFBQSxVQUFBOztFQUVBO0tBQ0EsTUFBQSxRQUFBO01BQ0EsS0FBQTtNQUNBLGFBQUE7TUFDQSxZQUFBOztLQUVBLE1BQUEsWUFBQTtNQUNBLEtBQUE7TUFDQSxhQUFBO01BQ0EsWUFBQTs7S0FFQSxNQUFBLFNBQUE7TUFDQSxLQUFBO01BQ0EsYUFBQTtNQUNBLFlBQUE7O0tBRUEsTUFBQSxXQUFBO01BQ0EsS0FBQTtNQUNBLGFBQUE7TUFDQSxZQUFBOzs7O0FDeEJBLE1BQUEsV0FBQSxhQUFBLENBQUEsVUFBQSxTQUFBLFFBQUE7Q0FDQSxPQUFBLFVBQUE7OztBQ0RBLE1BQUEsV0FBQSxnQkFBQSxDQUFBLFVBQUEsU0FBQSxRQUFBO0NBQ0EsT0FBQSxVQUFBOzs7QUNEQSxNQUFBLFdBQUEsZUFBQSxDQUFBLFVBQUEsU0FBQSxRQUFBO0VBQ0EsT0FBQSxVQUFBOzs7QUNEQSxNQUFBLFdBQUEsWUFBQSxDQUFBLFVBQUEsU0FBQSxRQUFBO0VBQ0EsT0FBQSxVQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7QUNEQSxNQUFBLFdBQUEsYUFBQSxDQUFBLFVBQUEsU0FBQSxRQUFBO0VBQ0EsT0FBQSxpQkFBQTs7RUFFQSxPQUFBLGNBQUEsU0FBQSxJQUFBO0lBQ0EsSUFBQSxJQUFBLElBQUE7SUFDQSxJQUFBLGFBQUEsU0FBQSxLQUFBLGFBQUE7SUFDQSxJQUFBLElBQUEsV0FBQTtNQUNBLE9BQUEsaUJBQUE7VUFDQTtNQUNBLE9BQUEsaUJBQUE7Ozs7RUFJQSxPQUFBLG9CQUFBOztFQUVBLE9BQUEsZ0JBQUEsVUFBQTtHQUNBLElBQUEsT0FBQSxzQkFBQSxFQUFBO0lBQ0EsT0FBQTs7OztFQUlBLE9BQUEsWUFBQSxVQUFBO0dBQ0EsSUFBQSxPQUFBLHNCQUFBLEVBQUE7SUFDQSxPQUFBOzs7Ozs7R0NpRUcsUUFBUTtBQUNYIiwiZmlsZSI6Im1haW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgcHJvZWYgPSBhbmd1bGFyLm1vZHVsZSgncHJvZWYnLCBbJ3VpLnJvdXRlciddKTtcblxucHJvZWYuY29uZmlnKGZ1bmN0aW9uKCRzdGF0ZVByb3ZpZGVyLCAkdXJsUm91dGVyUHJvdmlkZXIpIHtcbiAgJHVybFJvdXRlclByb3ZpZGVyLm90aGVyd2lzZShcIi9cIik7XG5cbiAgJHN0YXRlUHJvdmlkZXJcbiAgICAuc3RhdGUoJ2hvbWUnLCB7XG4gICAgICB1cmw6IFwiL1wiLFxuICAgICAgdGVtcGxhdGVVcmw6IFwiLi4vcGFydGlhbHMvaG9tZS5odG1sXCIsXG4gICAgICBjb250cm9sbGVyOiBcImhvbWVDdHJsXCJcbiAgICB9KVxuICAgIC5zdGF0ZSgnYXBwcm9hY2gnLCB7XG4gICAgICB1cmw6IFwiL2FwcHJvYWNoXCIsXG4gICAgICB0ZW1wbGF0ZVVybDogXCIuLi9wYXJ0aWFscy9hcHByb2FjaC5odG1sXCIsXG4gICAgICBjb250cm9sbGVyOiBcImFwcHJvYWNoQ3RybFwiXG4gICAgfSlcbiAgICAuc3RhdGUoJ2Fib3V0Jywge1xuICAgICAgdXJsOiBcIi9hYm91dFwiLFxuICAgICAgdGVtcGxhdGVVcmw6IFwiLi4vcGFydGlhbHMvYWJvdXQuaHRtbFwiLFxuICAgICAgY29udHJvbGxlcjogXCJhYm91dEN0cmxcIlxuICAgIH0pXG4gICAgLnN0YXRlKCdjb250YWN0Jywge1xuICAgICAgdXJsOiBcIi9jb250YWN0XCIsXG4gICAgICB0ZW1wbGF0ZVVybDogXCIuLi9wYXJ0aWFscy9jb250YWN0Lmh0bWxcIixcbiAgICAgIGNvbnRyb2xsZXI6IFwiY29udGFjdEN0cmxcIlxuICAgIH0pXG59KTtcblxuXG5cbiIsInByb2VmLmNvbnRyb2xsZXIoJ2Fib3V0Q3RybCcsIFsnJHNjb3BlJywgZnVuY3Rpb24oJHNjb3BlKSB7XG5cdCRzY29wZS5tZXNzYWdlID0gJ3RoaXMgaXMgdGhlIGFib3V0IHBhZ2UnO1xufV0pO1xuIiwicHJvZWYuY29udHJvbGxlcignYXBwcm9hY2hDdHJsJywgWyckc2NvcGUnLCBmdW5jdGlvbigkc2NvcGUpIHtcblx0JHNjb3BlLm1lc3NhZ2UgPSAndGhpcyBpcyB0aGUgYXBwcm9hY2ggcGFnZSc7XG59XSk7XG4iLCJwcm9lZi5jb250cm9sbGVyKCdjb250YWN0Q3RybCcsIFsnJHNjb3BlJywgZnVuY3Rpb24oJHNjb3BlKSB7XG4gICRzY29wZS5tZXNzYWdlID0gJ3RoaXMgaXMgdGhlIGNvbnRhY3QgcGFnZSc7XG59XSk7XG4iLCJwcm9lZi5jb250cm9sbGVyKCdob21lQ3RybCcsIFsnJHNjb3BlJywgZnVuY3Rpb24oJHNjb3BlKSB7XG4gICRzY29wZS5tZXNzYWdlID0gJ3RoaXMgaXMgdGhlIGhvbWUgcGFnZSc7XG5cbiAgLy8gJHNjb3BlLmN1cnJlbnRCYWNrZ3JvdW5kID0gMTtcblxuICAvLyAkc2NvcGUucHJldmlvdXNRdW90ZSA9IGZ1bmN0aW9uKCl7XG4gIC8vIFx0aWYgKCRzY29wZS5jdXJyZW50QmFja2dyb3VuZCAhPT0gMSl7XG4gIC8vIFx0XHQkc2NvcGUuY3VycmVudEJhY2tncm91bmQtLTtcbiAgLy8gXHR9XG4gIC8vIH07XG5cbiAgLy8gJHNjb3BlLm5leHRRdW90ZSA9IGZ1bmN0aW9uKCl7XG4gIC8vIFx0aWYgKCRzY29wZS5jdXJyZW50QmFja2dyb3VuZCAhPT0gNSl7XG4gIC8vIFx0XHQkc2NvcGUuY3VycmVudEJhY2tncm91bmQrKztcbiAgLy8gXHR9XG4gIC8vIH07XG5cbn1dKTtcbiIsInByb2VmLmNvbnRyb2xsZXIoJ2luZGV4Q3RybCcsIFsnJHNjb3BlJywgZnVuY3Rpb24oJHNjb3BlKSB7XG4gICRzY29wZS5tb3VzZURpcmVjdGlvbiA9ICdsZWZ0JztcblxuICAkc2NvcGUudXBkYXRlTW91c2UgPSBmdW5jdGlvbihldnQpe1xuICAgIHZhciB4ID0gZXZ0Lng7XG4gICAgdmFyIGhhbGZTY3JlZW4gPSBkb2N1bWVudC5ib2R5LmNsaWVudFdpZHRoLyAyO1xuICAgIGlmICh4IDwgaGFsZlNjcmVlbil7XG4gICAgICAkc2NvcGUubW91c2VEaXJlY3Rpb24gPSAnbGVmdCdcbiAgICB9IGVsc2V7XG4gICAgICAkc2NvcGUubW91c2VEaXJlY3Rpb24gPSAncmlnaHQnXG4gICAgfVxuICB9O1xuXG4gICRzY29wZS5jdXJyZW50QmFja2dyb3VuZCA9IDE7XG5cbiAgJHNjb3BlLnByZXZpb3VzUXVvdGUgPSBmdW5jdGlvbigpe1xuICBcdGlmICgkc2NvcGUuY3VycmVudEJhY2tncm91bmQgIT09IDEpe1xuICBcdFx0JHNjb3BlLmN1cnJlbnRCYWNrZ3JvdW5kLS07XG4gIFx0fVxuICB9O1xuXG4gICRzY29wZS5uZXh0UXVvdGUgPSBmdW5jdGlvbigpe1xuICBcdGlmICgkc2NvcGUuY3VycmVudEJhY2tncm91bmQgIT09IDUpe1xuICBcdFx0JHNjb3BlLmN1cnJlbnRCYWNrZ3JvdW5kKys7XG4gIFx0fVxuICB9O1xuXG59XSk7XG5cblxuIiwiKGZ1bmN0aW9uKHdpbmRvdywgZG9jdW1lbnQsIHVuZGVmaW5lZCkge1xuJ3VzZSBzdHJpY3QnO1xudmFyIHByb2VmID0gYW5ndWxhci5tb2R1bGUoJ3Byb2VmJywgWyd1aS5yb3V0ZXInXSk7XG5cbnByb2VmLmNvbmZpZyhmdW5jdGlvbigkc3RhdGVQcm92aWRlciwgJHVybFJvdXRlclByb3ZpZGVyKSB7XG4gICR1cmxSb3V0ZXJQcm92aWRlci5vdGhlcndpc2UoXCIvXCIpO1xuXG4gICRzdGF0ZVByb3ZpZGVyXG4gICAgLnN0YXRlKCdob21lJywge1xuICAgICAgdXJsOiBcIi9cIixcbiAgICAgIHRlbXBsYXRlVXJsOiBcIi4uL3BhcnRpYWxzL2hvbWUuaHRtbFwiLFxuICAgICAgY29udHJvbGxlcjogXCJob21lQ3RybFwiXG4gICAgfSlcbiAgICAuc3RhdGUoJ2FwcHJvYWNoJywge1xuICAgICAgdXJsOiBcIi9hcHByb2FjaFwiLFxuICAgICAgdGVtcGxhdGVVcmw6IFwiLi4vcGFydGlhbHMvYXBwcm9hY2guaHRtbFwiLFxuICAgICAgY29udHJvbGxlcjogXCJhcHByb2FjaEN0cmxcIlxuICAgIH0pXG4gICAgLnN0YXRlKCdhYm91dCcsIHtcbiAgICAgIHVybDogXCIvYWJvdXRcIixcbiAgICAgIHRlbXBsYXRlVXJsOiBcIi4uL3BhcnRpYWxzL2Fib3V0Lmh0bWxcIixcbiAgICAgIGNvbnRyb2xsZXI6IFwiYWJvdXRDdHJsXCJcbiAgICB9KVxuICAgIC5zdGF0ZSgnY29udGFjdCcsIHtcbiAgICAgIHVybDogXCIvY29udGFjdFwiLFxuICAgICAgdGVtcGxhdGVVcmw6IFwiLi4vcGFydGlhbHMvY29udGFjdC5odG1sXCIsXG4gICAgICBjb250cm9sbGVyOiBcImNvbnRhY3RDdHJsXCJcbiAgICB9KVxufSk7XG5cbnByb2VmLmNvbnRyb2xsZXIoJ2Fib3V0Q3RybCcsIFsnJHNjb3BlJywgZnVuY3Rpb24oJHNjb3BlKSB7XG5cdCRzY29wZS5tZXNzYWdlID0gJ3RoaXMgaXMgdGhlIGFib3V0IHBhZ2UnO1xufV0pO1xuXG5wcm9lZi5jb250cm9sbGVyKCdhcHByb2FjaEN0cmwnLCBbJyRzY29wZScsIGZ1bmN0aW9uKCRzY29wZSkge1xuXHQkc2NvcGUubWVzc2FnZSA9ICd0aGlzIGlzIHRoZSBhcHByb2FjaCBwYWdlJztcbn1dKTtcblxucHJvZWYuY29udHJvbGxlcignY29udGFjdEN0cmwnLCBbJyRzY29wZScsIGZ1bmN0aW9uKCRzY29wZSkge1xuICAkc2NvcGUubWVzc2FnZSA9ICd0aGlzIGlzIHRoZSBjb250YWN0IHBhZ2UnO1xufV0pO1xuXG5wcm9lZi5jb250cm9sbGVyKCdob21lQ3RybCcsIFsnJHNjb3BlJywgZnVuY3Rpb24oJHNjb3BlKSB7XG4gICRzY29wZS5tZXNzYWdlID0gJ3RoaXMgaXMgdGhlIGhvbWUgcGFnZSc7XG5cbiAgLy8gJHNjb3BlLmN1cnJlbnRCYWNrZ3JvdW5kID0gMTtcblxuICAvLyAkc2NvcGUucHJldmlvdXNRdW90ZSA9IGZ1bmN0aW9uKCl7XG4gIC8vIFx0aWYgKCRzY29wZS5jdXJyZW50QmFja2dyb3VuZCAhPT0gMSl7XG4gIC8vIFx0XHQkc2NvcGUuY3VycmVudEJhY2tncm91bmQtLTtcbiAgLy8gXHR9XG4gIC8vIH07XG5cbiAgLy8gJHNjb3BlLm5leHRRdW90ZSA9IGZ1bmN0aW9uKCl7XG4gIC8vIFx0aWYgKCRzY29wZS5jdXJyZW50QmFja2dyb3VuZCAhPT0gNSl7XG4gIC8vIFx0XHQkc2NvcGUuY3VycmVudEJhY2tncm91bmQrKztcbiAgLy8gXHR9XG4gIC8vIH07XG5cbn1dKTtcblxucHJvZWYuY29udHJvbGxlcignaW5kZXhDdHJsJywgWyckc2NvcGUnLCBmdW5jdGlvbigkc2NvcGUpIHtcbiAgJHNjb3BlLm1vdXNlRGlyZWN0aW9uID0gJ2xlZnQnO1xuXG4gICRzY29wZS51cGRhdGVNb3VzZSA9IGZ1bmN0aW9uKGV2dCl7XG4gICAgdmFyIHggPSBldnQueDtcbiAgICB2YXIgaGFsZlNjcmVlbiA9IGRvY3VtZW50LmJvZHkuY2xpZW50V2lkdGgvIDI7XG4gICAgaWYgKHggPCBoYWxmU2NyZWVuKXtcbiAgICAgICRzY29wZS5tb3VzZURpcmVjdGlvbiA9ICdsZWZ0J1xuICAgIH0gZWxzZXtcbiAgICAgICRzY29wZS5tb3VzZURpcmVjdGlvbiA9ICdyaWdodCdcbiAgICB9XG4gIH07XG5cbiAgJHNjb3BlLmN1cnJlbnRCYWNrZ3JvdW5kID0gMTtcblxuICAkc2NvcGUucHJldmlvdXNRdW90ZSA9IGZ1bmN0aW9uKCl7XG4gIFx0aWYgKCRzY29wZS5jdXJyZW50QmFja2dyb3VuZCAhPT0gMSl7XG4gIFx0XHQkc2NvcGUuY3VycmVudEJhY2tncm91bmQtLTtcbiAgXHR9XG4gIH07XG5cbiAgJHNjb3BlLm5leHRRdW90ZSA9IGZ1bmN0aW9uKCl7XG4gIFx0aWYgKCRzY29wZS5jdXJyZW50QmFja2dyb3VuZCAhPT0gNSl7XG4gIFx0XHQkc2NvcGUuY3VycmVudEJhY2tncm91bmQrKztcbiAgXHR9XG4gIH07XG5cbn1dKTtcblxufSkod2luZG93LCBkb2N1bWVudCk7XG4iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=